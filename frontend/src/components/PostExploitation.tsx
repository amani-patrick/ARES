
import React, { useState } from "react";
import { cn } from "@/lib/utils";
import { Terminal as TerminalIcon, Database, FolderSearch, Network, Laptop, Code, Workflow, ShieldAlert } from "lucide-react";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";

interface PostExploitationProps {
  className?: string;
}

const PostExploitation: React.FC<PostExploitationProps> = ({ className }) => {
  const [activeBeacon, setActiveBeacon] = useState<string>("1");
  const [command, setCommand] = useState<string>("");
  const [commandOutput, setCommandOutput] = useState<string[]>([]);
  const [isExecuting, setIsExecuting] = useState<boolean>(false);
  
  const handleExecuteCommand = () => {
    if (!command.trim()) return;
    
    setIsExecuting(true);
    setCommandOutput(prev => [...prev, `beacon${activeBeacon}> ${command}`]);
    
    // Simulate command execution
    setTimeout(() => {
      let output: string[] = [];
      
      if (command.startsWith("ls")) {
        output = [
          "drwxr-xr-x  2 root root  4096 Jun 12 15:42 etc",
          "drwxr-xr-x  3 root root  4096 Jun 12 15:42 var",
          "-rw-r--r--  1 root root  2048 Jun 12 15:42 sensitive_data.db",
          "-rw-r--r--  1 root root   512 Jun 12 15:42 config.xml",
        ];
      } else if (command.startsWith("cat")) {
        output = [
          "<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
          "<config>",
          "  <database>",
          "    <host>localhost</host>",
          "    <user>admin</user>",
          "    <password>P@ssw0rd123!</password>",
          "  </database>",
          "</config>"
        ];
      } else if (command.startsWith("whoami")) {
        output = ["admin"];
      } else if (command.startsWith("id")) {
        output = ["uid=0(root) gid=0(root) groups=0(root)"];
      } else {
        output = ["Command not recognized or permission denied"];
      }
      
      setCommandOutput(prev => [...prev, ...output]);
      setIsExecuting(false);
      setCommand("");
    }, 1000);
  };

  return (
    <div className={cn("glass h-full flex flex-col", className)}>
      <div className="flex items-center justify-between p-3 border-b border-white/10">
        <h3 className="text-sm font-semibold text-white/90 flex items-center">
          <TerminalIcon className="h-4 w-4 mr-2" />
          Post-Exploitation
        </h3>
      </div>
      
      <div className="p-4 border-b border-white/10">
        <h4 className="text-sm font-medium mb-3 flex items-center">
          <Code className="h-4 w-4 mr-2 text-red-400" />
          Active Beacons
        </h4>
        
        <div className="grid grid-cols-1 md:grid-cols-3 gap-2 mb-4">
          {["1", "2", "3"].map((beaconId) => (
            <Button 
              key={beaconId}
              variant={activeBeacon === beaconId ? "default" : "outline"}
              size="sm"
              onClick={() => setActiveBeacon(beaconId)}
              className={cn(
                "flex items-center justify-start",
                activeBeacon === beaconId && "border-red-500"
              )}
            >
              <span className={cn(
                "h-2 w-2 rounded-full mr-2",
                activeBeacon === beaconId ? "bg-green-500" : "bg-gray-500"
              )}></span>
              Beacon {beaconId} - 
              {beaconId === "1" ? " Linux" : beaconId === "2" ? " Windows" : " MacOS"}
            </Button>
          ))}
        </div>
        
        <div className="space-y-2">
          <label className="text-xs text-white/70">Command</label>
          <div className="flex space-x-2">
            <Input
              value={command}
              onChange={(e) => setCommand(e.target.value)}
              placeholder="whoami"
              className="bg-background/50 flex-1"
              onKeyDown={(e) => {
                if (e.key === "Enter") {
                  handleExecuteCommand();
                }
              }}
            />
            <Button 
              onClick={handleExecuteCommand} 
              disabled={isExecuting || !command.trim()}
            >
              Execute
            </Button>
          </div>
        </div>
        
        {commandOutput.length > 0 && (
          <div className="mt-4 terminal h-60 overflow-auto">
            {commandOutput.map((line, idx) => (
              <div 
                key={idx} 
                className={line.includes("beacon") ? "text-blue-400" : "text-white"}
              >
                {line}
              </div>
            ))}
          </div>
        )}
      </div>
      
      <div className="flex-1 p-4 overflow-auto">
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div className="glass p-4 rounded-md">
            <h4 className="text-sm font-medium mb-2 flex items-center">
              <TerminalIcon className="h-4 w-4 mr-2 text-red-400" />
              Command & Control
            </h4>
            <p className="text-xs text-white/70 mb-3">
              Manage active connections to compromised systems
            </p>
            <div className="terminal h-40">
              <span className="text-green-400">beacon</span>
              <span className="text-white"> --list</span>
              <div className="mt-2">
                <div className="text-white">ID: 1 | IP: 10.0.0.5 | OS: Linux | Uptime: 12m</div>
                <div className="text-white">ID: 2 | IP: 10.0.0.8 | OS: Windows | Uptime: 5m</div>
              </div>
            </div>
          </div>
          
          <div className="glass p-4 rounded-md">
            <h4 className="text-sm font-medium mb-2 flex items-center">
              <Database className="h-4 w-4 mr-2 text-yellow-400" />
              Data Exfiltration
            </h4>
            <p className="text-xs text-white/70 mb-3">
              Extract and analyze data from compromised systems
            </p>
            <div className="terminal h-40">
              <span className="text-green-400">exfil</span>
              <span className="text-white"> --target=beacon1 --path=/etc/passwd</span>
              <div className="mt-2">
                <span className="text-green-400">[+] Data extracted successfully (512 bytes)</span>
              </div>
            </div>
          </div>
          
          <div className="glass p-4 rounded-md">
            <h4 className="text-sm font-medium mb-2 flex items-center">
              <FolderSearch className="h-4 w-4 mr-2 text-blue-400" />
              Credential Harvesting
            </h4>
            <p className="text-xs text-white/70 mb-3">
              Discover and extract authentication credentials
            </p>
            <div className="glass p-2 rounded-md">
              <div className="flex justify-between text-xs mb-1">
                <span>admin</span>
                <span className="text-green-400">P@ssw0rd123</span>
              </div>
              <div className="flex justify-between text-xs mb-1">
                <span>user1</span>
                <span className="text-green-400">Summer2023!</span>
              </div>
              <div className="flex justify-between text-xs mb-1">
                <span>service_acct</span>
                <span className="text-green-400">ApiKey_12345</span>
              </div>
            </div>
          </div>
          
          <div className="glass p-4 rounded-md">
            <h4 className="text-sm font-medium mb-2 flex items-center">
              <Network className="h-4 w-4 mr-2 text-purple-400" />
              Lateral Movement
            </h4>
            <p className="text-xs text-white/70 mb-3">
              Expand access across the network to other systems
            </p>
            <div className="terminal h-40">
              <span className="text-green-400">pivot</span>
              <span className="text-white"> --source=beacon1 --target=10.0.0.9 --method=psexec</span>
              <div className="mt-2">
                <span className="text-yellow-400">[*] Attempting lateral movement...</span>
                <div className="text-green-400">[+] New beacon established: ID 3</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default PostExploitation;
